# This is a basic workflow to help you get started with Actions
name: Unity build and test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath: 
          - Box_Smasher
        unityVersion:
          - 2019.4.2f1
        targetPlatform:
          - StandaloneWindows64

    steps:
      # Checkout
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
          ref: ${{ github.event.pull_request.base.sha }}
        
      # Cache
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.targetPlatform }}/Library
          key: Library

      # Nodejs
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      # install npm dependencies
      - name: Install dependencies
        run: |
          npm install
          npm run prepare

      # execute commitlint
      - name: Validate all commits from PR
        run: npx commitlint --from HEAD~${{ github.event.pull_request.commits }} --to HEAD --verbose


      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          testMode: PlayMode
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (Only Play Mode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

      # Build
      - name: Build Project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: ${{ matrix.targetPlatform }}/build

      # Release with semantic
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run semantic-release
